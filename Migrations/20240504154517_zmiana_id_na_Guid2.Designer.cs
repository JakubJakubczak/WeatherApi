// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApi.Data;

#nullable disable

namespace WeatherApi.Migrations
{
    [DbContext(typeof(WeatherApiContext))]
    [Migration("20240504154517_zmiana_id_na_Guid2")]
    partial class zmiana_id_na_Guid2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeatherApi.Models.Station", b =>
                {
                    b.Property<Guid>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Bateria")
                        .HasColumnType("float");

                    b.Property<double>("DlugoscGeo")
                        .HasColumnType("float");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SzerokoscGeo")
                        .HasColumnType("float");

                    b.HasKey("StationId");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("WeatherApi.Models.Weather", b =>
                {
                    b.Property<Guid>("WeatherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cisnienie")
                        .HasColumnType("float");

                    b.Property<DateTime>("Czas")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Temperatura")
                        .HasColumnType("float");

                    b.Property<double>("Wilgotnosc")
                        .HasColumnType("float");

                    b.HasKey("WeatherId");

                    b.HasIndex("StationId");

                    b.ToTable("Weather");
                });

            modelBuilder.Entity("WeatherApi.Models.Weather", b =>
                {
                    b.HasOne("WeatherApi.Models.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });
#pragma warning restore 612, 618
        }
    }
}
